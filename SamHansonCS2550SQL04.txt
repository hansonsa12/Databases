SELECT prodmfg, COUNT(*)AS Number_of_Products
FROM product
Group by prodmfg
Having Count(*)>1
Order by prodmfg

SELECT To_Char(AVG(custbal), '$999.99') AS "Customer_Balance"
FROM customer

SELECT To_Char(MAX(custbal), '$99999.99') AS "Highest Balance"
FROM customer

SELECT MAX(custbal) - AVG(custbal) AS "Difference"
FROM customer

SELECT Min(orddate) AS "Earliest Order Date"
FROM ordertbl

SELECT Count(*)AS "number of customers", custstate
FROM customer
Group by custstate

SELECT COUNT(*)empno, NVL(empcommrate, 0.00)
FROM employee
Group by empcommrate

SELECT Prodmfg, SUM(prodprice)
FROM product
group by prodmfg

SELECT Count(*)AS "Number of Orders", ordstate AS "State"
FROM ordertbl
Where ordstate = 'WA'
Group by ordstate

SELECT COUNT(*) AS "Number of Orders", custno
FROM ordertbl
group by custno
HAVING COUNT(*) > 1

SELECT NVL(empno, 'Online')"Employee", Count(*) AS "Num_Orders"
FROM ordertbl
group by empno
order by empno


1.)
SELECT To_Char(avg(cost), '9999.99') AS "Average Cost"
FROM course;

2.)
SELECT Count(*) AS "February_Registrations"
FROM student
where registration_date LIKE '%FEB%';

3.)
SELECT avg(numeric_grade) AS "Average", MAX(numeric_grade) AS "Highest", MIN(numeric_grade) AS "Lowest"
FROM grade
Where section_id LIKE '147'
and grade_type_code like 'FI';

4.)
SELECT city, state, Count(*)AS "ZIPCODES"
FROM zipcode
GROUP BY city, state
Having Count(*) > 2
Order by state, city;

5.)
SELECT section_id, Count(*)AS ENROLLED
FROM enrollment
Where To_Char(enroll_date, 'MM/DD/YYYY')= '02/21/2007'
group by section_id
order by Count(*) DESC;

6.)
SELECT student_id, section_id, To_Char(AVG(numeric_grade), '99.9999') AS "AVERAGE GRADE"
FROM grade
WHERE section_id LIKE '86'
GROUP BY student_id, section_id
Order by student_id;

7.)
SELECT student_id, COUNT(*) AS SECTIONS
FROM enrollment
Where student_id = 250
Group by student_id;

8.)
SELECT section_id, Min(numeric_grade)AS LOWSCORE
FROM grade
where grade_type_code LIKE 'QZ'
group by section_id
Having Min(numeric_grade) > 80
Order by section_id;

9.)
SELECT employer, COUNT(*) AS "EMPLOYEES"
FROM student
GROUP BY employer
HAVING COUNT(*) > 5
ORDER BY COUNT(*);

10.)
SELECT section_id, Count(*) AS "PARTICIPATION GRADES", MIN(numeric_grade) AS "LOWEST GRADE"
FROM grade
Where grade_type_code LIKE 'PA'
group by section_id
Having COUNT(*) > 15
ORDER BY section_id;



